# OpenComputers 1.7.5.1290
version:1.7
modname:OpenComputers


cfgfile:config/OpenComputers.cfg

patch:id=VertX1Z0ToX0Z1,Ox=1.0,Oy=0.0,Oz=0.0,Ux=0.0,Uy=0.0,Uz=1.0,Vx=1.0,Vy=1.0,Vz=0.0,visibility=flip
patch:id=VertX025,Ox=0.25,Oy=0.0,Oz=1.0,Ux=0.25,Uy=0.0,Uz=0.0,Vx=0.25,Vy=1.0,Vz=1.0
patch:id=VertX075,Ox=0.75,Oy=0.0,Oz=1.0,Ux=0.75,Uy=0.0,Uz=0.0,Vx=0.75,Vy=1.0,Vz=1.0
patch:id=HorizY001ZTop,Ox=0.0,Oy=0.01,Oz=0.0,Ux=1.0,Uy=0.01,Uz=0.0,Vx=0.0,Vy=0.01,Vz=1.0
patch:id=SlopeXUpZTop,Ox=0.0,Oy=0.0,Oz=0.0,Ux=0.0,Uy=0.0,Uz=1.0,Vx=1.0,Vy=1.0,Vz=0.0
patch:id=VertX0In,Ox=0.0,Oy=0.0,Oz=1.0,Ux=0.0,Uy=0.0,Uz=0.0,Vx=0.0,Vy=1.0,Vz=1.0
patch:id=VertX04375,Ox=0.4375,Oy=0.0,Oz=0.0,Ux=0.4375,Uy=0.0,Uz=1.0,Vx=0.4375,Vy=1.0,Vz=0.0,visibility=top
patch:id=TorchSide1,Ox=-0.5,Oy=0.2,Oz=0.4375,Ux=0.5,Uy=0.2,Uz=0.4375,Vx=-0.1,Vy=1.2,Vz=0.4375,Vmax=0.8,visibility=bottom
patch:id=TorchSide2,Ox=-0.5,Oy=0.2,Oz=0.5625,Ux=0.5,Uy=0.2,Uz=0.5625,Vx=-0.1,Vy=1.2,Vz=0.5625,Vmax=0.8,visibility=top
patch:id=TorchSide3,Ox=0.0625,Oy=0.2,Oz=0.0,Ux=0.0625,Uy=0.2,Uz=1.0,Vx=0.4625,Vy=1.2,Vz=0.0,Vmax=0.8,visibility=bottom
patch:id=TorchSide4,Ox=-0.0625,Oy=0.2,Oz=0.0,Ux=-0.0625,Uy=0.2,Uz=1.0,Vx=0.3375,Vy=1.2,Vz=0.0,Vmax=0.8,visibility=top
patch:id=TorchTop,Ox=0.0,Oy=0.625,Oz=-0.0625,Ux=1.0,Uy=0.625,Uz=-0.0625,Vx=0.0,Vy=0.625,Vz=0.9375,Umin=0.4375,Umax=0.5625,Vmin=0.5,Vmax=0.625
patch:id=TorchTopSlope,Ox=0.0,Oy=0.825,Oz=-0.3625,Ux=1.0,Uy=0.825,Uz=-0.3625,Vx=0.0,Vy=0.825,Vz=0.6375,Umin=0.4375,Umax=0.5625,Vmin=0.5,Vmax=0.625
patch:id=VertX00625,Ox=0.0625,Oy=0.0,Oz=0.0,Ux=0.0625,Uy=0.0,Uz=1.0,Vx=0.0625,Vy=1.0,Vz=0.0,visibility=top
patch:id=HorizY100ZTop,Ox=0.0,Oy=1.0,Oz=0.0,Ux=1.0,Uy=1.0,Uz=0.0,Vx=0.0,Vy=1.0,Vz=1.0,visibility=bottom


# %accessPoint:* (accessPoint), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.AccessPoint

# %adapter:* (adapter), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Adapter

# %cable:* (cable), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=false,cls=li.cil.oc.common.block.Cable
boxblock:id=%cable,xmin=0.375,xmax=0.625,ymin=0.375,ymax=0.625,zmin=0.375,zmax=0.625,data=*

# %capacitor:* (capacitor), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Capacitor

# %case1:* (case1), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Case

# %case3:* (case3), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Case

# %case2:* (case2), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Case

# %charger:* (charger), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Charger

# %disassembler:* (disassembler), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Disassembler

# %diskDrive:* (diskDrive), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.DiskDrive

# %geolyzer:* (geolyzer), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Geolyzer

# %hologram1:* (hologram1), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=false,cls=li.cil.oc.common.block.Hologram
boxblock:id=%hologram1,xmin=0.0,xmax=1.0,ymin=0.0,ymax=0.5,zmin=0.0,zmax=1.0,data=*

# %hologram2:* (hologram2), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=false,cls=li.cil.oc.common.block.Hologram
boxblock:id=%hologram2,xmin=0.0,xmax=1.0,ymin=0.0,ymax=0.5,zmin=0.0,zmax=1.0,data=*

# %motionSensor:* (motionSensor), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.MotionSensor

# %powerConverter:* (powerConverter), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.PowerConverter

# %powerDistributor:* (powerDistributor), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.PowerDistributor

# %raid:* (raid), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Raid

# %redstone:* (redstone), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Redstone

# %relay:* (relay), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Relay

# %screen1:* (screen1), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Screen

# %screen3:* (screen3), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Screen

# %screen2:* (screen2), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Screen

# %switch:* (switch), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Switch

# %caseCreative:* (caseCreative), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Case

# %microcontroller:* (microcontroller), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Microcontroller

# %chameliumBlock:* (chameliumBlock), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.ChameliumBlock

# %waypoint:* (waypoint), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Waypoint

# %endstone:* (endstone), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.FakeEndstone

# %netSplitter:* (netSplitter), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.NetSplitter

# %transposer:* (transposer), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.Transposer

# %carpetedCapacitor:* (carpetedCapacitor), render=li.cil.oc.client.renderer.block.BlockRenderer$(CUSTOM), opaque=true,cls=li.cil.oc.common.block.CarpetedCapacitor
